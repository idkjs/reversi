diff --git a/node_modules/bs-enzyme/.merlin b/node_modules/bs-enzyme/.merlin
new file mode 100644
index 0000000..1288afe
--- /dev/null
+++ b/node_modules/bs-enzyme/.merlin
@@ -0,0 +1,10 @@
+####{BSB GENERATED: NO EDIT
+FLG -ppx '/Users/mando/Github/reversi/node_modules/bs-platform/darwin/bsc.exe -as-ppx -bs-jsx 3'
+S /Users/mando/Github/reversi/node_modules/bs-platform/lib/ocaml
+B /Users/mando/Github/reversi/node_modules/bs-platform/lib/ocaml
+FLG -w +a-4-9-20-40-41-42-50-61-102
+S /Users/mando/Github/reversi/node_modules/reason-react/lib/ocaml
+B /Users/mando/Github/reversi/node_modules/reason-react/lib/ocaml
+S src
+B lib/bs/src
+####BSB GENERATED: NO EDIT}
diff --git a/node_modules/bs-enzyme/lib/bs/.bsbuild b/node_modules/bs-enzyme/lib/bs/.bsbuild
new file mode 100644
index 0000000..d8c9280
--- /dev/null
+++ b/node_modules/bs-enzyme/lib/bs/.bsbuild
@@ -0,0 +1,5 @@
+1
+Enzyme
+src	
+1
+0
diff --git a/node_modules/bs-enzyme/lib/bs/.bsdeps b/node_modules/bs-enzyme/lib/bs/.bsdeps
new file mode 100644
index 0000000..25c96f6
--- /dev/null
+++ b/node_modules/bs-enzyme/lib/bs/.bsdeps
@@ -0,0 +1,5 @@
+9.0.2
+/Users/mando/Github/reversi/node_modules/bs-enzyme
+1
+bsconfig.json	0x1.81f5b44ca7efap+30
+src	0x1.81f5b5723af71p+30
diff --git a/node_modules/bs-enzyme/lib/bs/.compiler.log b/node_modules/bs-enzyme/lib/bs/.compiler.log
new file mode 100644
index 0000000..0978319
--- /dev/null
+++ b/node_modules/bs-enzyme/lib/bs/.compiler.log
@@ -0,0 +1,2 @@
+#Start(1618832733655)
+#Done(1618832733744)
diff --git a/node_modules/bs-enzyme/lib/bs/.ninja_log b/node_modules/bs-enzyme/lib/bs/.ninja_log
new file mode 100644
index 0000000..e3dfea9
--- /dev/null
+++ b/node_modules/bs-enzyme/lib/bs/.ninja_log
@@ -0,0 +1,6 @@
+# ninja log v6
+0	43	1618832733697739167	src/Enzyme.ast	211cf0d56435d5ea
+43	56	1618832733710915730	src/Enzyme.d	11e4f82936a274bd
+56	89	1618832733743430616	src/Enzyme.cmj	c2a58233dfc9a669
+56	89	1618832733743430616	src/Enzyme.cmi	c2a58233dfc9a669
+56	89	1618832733743430616	../../src/Enzyme.bs.js	c2a58233dfc9a669
diff --git a/node_modules/bs-enzyme/lib/bs/build.ninja b/node_modules/bs-enzyme/lib/bs/build.ninja
new file mode 100644
index 0000000..9049da2
--- /dev/null
+++ b/node_modules/bs-enzyme/lib/bs/build.ninja
@@ -0,0 +1,14 @@
+rescript = 1
+g_finger := /Users/mando/Github/reversi/node_modules/reason-react/lib/ocaml/install.stamp
+rule astj
+  command = /Users/mando/Github/reversi/node_modules/bs-platform/darwin/bsc.exe  -w a -bs-v 9.0.2 -bs-jsx 3 -bs-super-errors -absname -bs-ast -o $out $i
+o src/Enzyme.ast : astj ../../src/Enzyme.re
+rule deps
+  command = /Users/mando/Github/reversi/node_modules/bs-platform/darwin/bsb_helper.exe -hash 20bd2f8c44dd14fbe725a218dd47e2a3 $in
+  restat = 1
+o src/Enzyme.d : deps src/Enzyme.ast
+rule mij
+  command = /Users/mando/Github/reversi/node_modules/bs-platform/darwin/bsc.exe -I src -I /Users/mando/Github/reversi/node_modules/reason-react/lib/ocaml -bs-super-errors  -w a -bs-package-name bs-enzyme -bs-package-output es6:$in_d:.bs.js -bs-v $g_finger $i
+  dyndep = 1
+  restat = 1
+o src/Enzyme.cmj src/Enzyme.cmi ../../src/Enzyme.bs.js : mij src/Enzyme.ast
diff --git a/node_modules/bs-enzyme/lib/bs/install.ninja b/node_modules/bs-enzyme/lib/bs/install.ninja
new file mode 100644
index 0000000..de72e01
--- /dev/null
+++ b/node_modules/bs-enzyme/lib/bs/install.ninja
@@ -0,0 +1,10 @@
+rescript = 1
+rule cp
+  command = cp $i $out
+rule touch
+ command = touch $out
+o Enzyme.cmi : cp ../bs/src/Enzyme.cmi
+o Enzyme.cmj : cp ../bs/src/Enzyme.cmj
+o Enzyme.cmt : cp ../bs/src/Enzyme.cmt
+o Enzyme.re : cp ../../src/Enzyme.re
+build install.stamp : touch Enzyme.cmi Enzyme.cmj 
diff --git a/node_modules/bs-enzyme/lib/bs/src/Enzyme.ast b/node_modules/bs-enzyme/lib/bs/src/Enzyme.ast
new file mode 100644
index 0000000..2ab63ef
Binary files /dev/null and b/node_modules/bs-enzyme/lib/bs/src/Enzyme.ast differ
diff --git a/node_modules/bs-enzyme/lib/bs/src/Enzyme.cmi b/node_modules/bs-enzyme/lib/bs/src/Enzyme.cmi
new file mode 100644
index 0000000..1f3ff6f
Binary files /dev/null and b/node_modules/bs-enzyme/lib/bs/src/Enzyme.cmi differ
diff --git a/node_modules/bs-enzyme/lib/bs/src/Enzyme.cmj b/node_modules/bs-enzyme/lib/bs/src/Enzyme.cmj
new file mode 100644
index 0000000..e42f8f6
Binary files /dev/null and b/node_modules/bs-enzyme/lib/bs/src/Enzyme.cmj differ
diff --git a/node_modules/bs-enzyme/lib/bs/src/Enzyme.cmt b/node_modules/bs-enzyme/lib/bs/src/Enzyme.cmt
new file mode 100644
index 0000000..fb41ec9
Binary files /dev/null and b/node_modules/bs-enzyme/lib/bs/src/Enzyme.cmt differ
diff --git a/node_modules/bs-enzyme/lib/bs/src/Enzyme.d b/node_modules/bs-enzyme/lib/bs/src/Enzyme.d
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/bs-enzyme/lib/ocaml/.compiler.log b/node_modules/bs-enzyme/lib/ocaml/.compiler.log
new file mode 100644
index 0000000..a7db3a7
--- /dev/null
+++ b/node_modules/bs-enzyme/lib/ocaml/.compiler.log
@@ -0,0 +1,2 @@
+#Start(1618832733751)
+#Done(1618832733776)
diff --git a/node_modules/bs-enzyme/lib/ocaml/.ninja_log b/node_modules/bs-enzyme/lib/ocaml/.ninja_log
new file mode 100644
index 0000000..7cf6b72
--- /dev/null
+++ b/node_modules/bs-enzyme/lib/ocaml/.ninja_log
@@ -0,0 +1,6 @@
+# ninja log v6
+0	14	1618832733764756848	Enzyme.cmi	6472098ac080ef1a
+1	14	1618832733764733057	Enzyme.cmj	6e4c83eb8507f874
+1	14	1618832733764743515	Enzyme.re	f7e7bf4b78eb7c22
+1	14	1618832733764789806	Enzyme.cmt	3a7b2babaf6abf72
+14	25	1618832733776395709	install.stamp	cff5a5b4c02d30cf
diff --git a/node_modules/bs-enzyme/lib/ocaml/Enzyme.cmi b/node_modules/bs-enzyme/lib/ocaml/Enzyme.cmi
new file mode 100644
index 0000000..1f3ff6f
Binary files /dev/null and b/node_modules/bs-enzyme/lib/ocaml/Enzyme.cmi differ
diff --git a/node_modules/bs-enzyme/lib/ocaml/Enzyme.cmj b/node_modules/bs-enzyme/lib/ocaml/Enzyme.cmj
new file mode 100644
index 0000000..e42f8f6
Binary files /dev/null and b/node_modules/bs-enzyme/lib/ocaml/Enzyme.cmj differ
diff --git a/node_modules/bs-enzyme/lib/ocaml/Enzyme.cmt b/node_modules/bs-enzyme/lib/ocaml/Enzyme.cmt
new file mode 100644
index 0000000..fb41ec9
Binary files /dev/null and b/node_modules/bs-enzyme/lib/ocaml/Enzyme.cmt differ
diff --git a/node_modules/bs-enzyme/lib/ocaml/Enzyme.re b/node_modules/bs-enzyme/lib/ocaml/Enzyme.re
new file mode 100644
index 0000000..6653635
--- /dev/null
+++ b/node_modules/bs-enzyme/lib/ocaml/Enzyme.re
@@ -0,0 +1,106 @@
+type node = ReasonReact.reactElement;
+
+type selector = string;
+
+module Renderer = {
+  type t;
+  type predicate = t => bool;
+  [@bs.send.pipe : t] external find : selector => t = "find";
+  [@bs.send.pipe : t] external findWhere : predicate => t = "findWhere";
+  [@bs.send.pipe : t] external filter : selector => t = "filter";
+  [@bs.send.pipe : t] external filterWhere : predicate => t = "filterWhere";
+  [@bs.send.pipe : t] external contains : node => bool = "contains";
+  [@bs.send.pipe : t] external containsAll : array(node) => bool = "contains";
+  [@bs.send.pipe : t] external containsMatchingElement : node => bool = "containsMatchingElement";
+  [@bs.send.pipe : t] external containsAllMatchingElements : array(node) => bool =
+    "containsAllMatchingElements";
+  [@bs.send.pipe : t] external containsAnyMatchingElements : array(node) => bool =
+    "containsAnyMatchingElements";
+  [@bs.send.pipe : t] external matchesElement : node => bool = "matchesElement";
+  [@bs.send.pipe : t] external hasClass : string => bool = "hasClass";
+  [@bs.send.pipe : t] external is : selector => bool = "is";
+  [@bs.send] external exists : t => bool = "exists";
+  [@bs.send] external isEmptyRender : t => bool = "isEmptyRender";
+  [@bs.send.pipe : t] external not : selector => t = "not";
+  [@bs.send] external children : t => t = "children";
+  [@bs.send.pipe : t] external childAt : int => t = "childAt";
+  [@bs.send] external parents : t => t = "parents";
+  [@bs.send] external parent : t => t = "parent";
+  [@bs.send.pipe : t] external closest : selector => t = "closest";
+  [@bs.send] external unmount : t => t = "unmount";
+  [@bs.send] external text : t => string = "text";
+  [@bs.send] external html : t => string = "html";
+  [@bs.send.pipe : t] external get : int => node = "get";
+  [@bs.send] external getElement : t => node = "getElement";
+  [@bs.send] external getElements : t => array(node) = "getElements";
+  [@bs.send] external getNode : t => node = "getNode";
+  [@bs.send] external getNodes : t => array(node) = "getNodes";
+  [@bs.send.pipe : t] external at : int => t = "at";
+  [@bs.send] external first : t => t = "first";
+  [@bs.send] external last : t => t = "last";
+  [@bs.send.pipe : t] external simulate : string => unit = "simulate";
+  [@bs.send.pipe : t] external simulate1 : (string, 'a) => unit = "simulate";
+  [@bs.send.pipe : t] external simulate2 : (string, 'a, 'b) => unit = "simulate";
+  [@bs.send.pipe : t] external simulate3 : (string, 'a, 'b, 'c) => unit = "simulate";
+  [@bs.send.pipe : t] external simulate4 : (string, 'a, 'b, 'c, 'd) => unit = "simulate";
+  [@bs.splice] [@bs.send.pipe : t] external simulateMany : (string, ~args: array('a)) => unit =
+    "simulate";
+  [@bs.send] external jsState : t => Js.t({..}) = "state";
+  [@bs.send.pipe : t] external jsStateFor : string => Js.t({..}) = "state";
+  [@bs.send.pipe : t] external setJsState : Js.t({..}) => unit = "setState";
+  [@bs.send] external jsContext : t => Js.t({..}) = "context";
+  [@bs.send.pipe : t] external jsContextFor : string => Js.t({..}) = "context";
+  [@bs.send.pipe : t] external setJsContext : Js.t({..}) => unit = "setContext";
+  [@bs.send] external jsProps : t => Js.t({..}) = "props";
+  [@bs.send.pipe : t] external jsPropFor : string => Js.t({..}) = "prop";
+  [@bs.send.pipe : t] external setJsProps : Js.t({..}) => unit = "setProps";
+  [@bs.send] external key : t => string = "key";
+  let state = (t) : 'state => jsState(t)##reasonState;
+  [@bs.send] external instance : t => node = "instance";
+  [@bs.send] external update : t => unit = "update";
+  [@bs.send] external debug : t => string = "debug";
+  [@bs.send] external type_ : t => string = "type";
+  [@bs.send] external name : t => string = "name";
+  [@bs.send.pipe : t] external forEach : (t => unit) => t = "forEach";
+  [@bs.send.pipe : t] external map : (t => 'a) => array('a) = "map";
+  [@bs.send.pipe : t] external foldLeft : (('a, t) => 'a, 'a) => 'a = "reduce";
+  [@bs.send.pipe : t] external foldRight : (('a, t) => 'a, 'a) => 'a = "reduceRight";
+  [@bs.get] external length : t => int = "length";
+  [@bs.send] external hostNodes : t => t = "hostNodes";
+};
+
+module Shallow = {
+  include Renderer;
+  [@bs.send.pipe : t] external equals : node => bool = "equals";
+};
+
+module Mount = {
+  include Renderer;
+};
+
+[@bs.module "enzyme"] external shallow : node => Shallow.t = "";
+
+[@bs.module "enzyme"] external mount : node => Mount.t = "";
+
+type adapter;
+
+type js_obj_with_adapter = {. "adapter": adapter};
+[@bs.module "@wojtekmaj/enzyme-adapter-react-17"] [@bs.new] external react_17_adapter : unit => adapter = "default";
+
+[@bs.module "enzyme"] external configure : js_obj_with_adapter => adapter = "configure";
+
+[@bs.module "enzyme-adapter-react-16"] [@bs.new] external react_16_adapter : unit => adapter = "default";
+
+[@bs.module "enzyme-adapter-react-15"] [@bs.new] external react_15_adapter : unit => adapter = "default";
+
+[@bs.module "enzyme-adapter-react-15.4"] [@bs.new] external react_15_4_adapter : unit => adapter = "default";
+
+[@bs.module "enzyme-adapter-react-14"] [@bs.new] external react_14_adapter : unit => adapter = "default";
+
+[@bs.module "enzyme-adapter-react-13"] [@bs.new] external react_13_adapter : unit => adapter = "default";
+
+[@bs.module "preact-enzyme-adapter"] [@bs.new] external preact_adapter : unit => adapter = "default";
+
+[@bs.module "enzyme-adapter-inferno"] [@bs.new] external inferno_adapter : unit => adapter = "default";
+
+let configureEnzyme = (adapter: adapter) => configure({"adapter": adapter});
diff --git a/node_modules/bs-enzyme/lib/ocaml/install.stamp b/node_modules/bs-enzyme/lib/ocaml/install.stamp
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/bs-enzyme/src/Enzyme.bs.js b/node_modules/bs-enzyme/src/Enzyme.bs.js
new file mode 100644
index 0000000..eff80ec
--- /dev/null
+++ b/node_modules/bs-enzyme/src/Enzyme.bs.js
@@ -0,0 +1,34 @@
+// Generated by ReScript, PLEASE EDIT WITH CARE
+
+import * as Enzyme from "enzyme";
+
+function state(t) {
+  return t.state().reasonState;
+}
+
+var Renderer = {
+  state: state
+};
+
+var Shallow = {
+  state: state
+};
+
+var Mount = {
+  state: state
+};
+
+function configureEnzyme(adapter) {
+  return Enzyme.configure({
+              adapter: adapter
+            });
+}
+
+export {
+  Renderer ,
+  Shallow ,
+  Mount ,
+  configureEnzyme ,
+  
+}
+/* enzyme Not a pure module */
diff --git a/node_modules/bs-enzyme/src/Enzyme.re b/node_modules/bs-enzyme/src/Enzyme.re
index d351c0d..6653635 100644
--- a/node_modules/bs-enzyme/src/Enzyme.re
+++ b/node_modules/bs-enzyme/src/Enzyme.re
@@ -85,6 +85,7 @@ module Mount = {
 type adapter;
 
 type js_obj_with_adapter = {. "adapter": adapter};
+[@bs.module "@wojtekmaj/enzyme-adapter-react-17"] [@bs.new] external react_17_adapter : unit => adapter = "default";
 
 [@bs.module "enzyme"] external configure : js_obj_with_adapter => adapter = "configure";
 
